version: '3.5'

services:
  projectname_backend:
    image: projectname_backend:local
    container_name: projectname_backend
    restart: unless-stopped
    build:
      context: ..
      dockerfile: devops/Dockerfile
    depends_on:
      - projectname_database
    links:
      - projectname_database
    networks:
      - projectname
    ports:
      - 127.0.0.1:3000:3000
    environment:
      PORT: 3000
      BASIC_URL: 'http://localhost'
      FRONTEND_URL: 'http://localhost:4200'
      ADMIN_PANEL_URL: 'http://localhost:4201'
      EXPIRES_IN: '10d'
      JWT_SECRET: 'projectnameSecter'
      DANGEROUSLY_DISABLE_AUTH_GUARD: 'false'
      SALT_VALUE: 10
      POSTGRES_PORT: 5432
      DB_TYPE: 'postgres'
      POSTGRES_DATABASE: 'postgres'
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: '3i162jcuVIiJLnmFLmr5'
      POSTGRES_HOST: 'projectname_database'
      TYPEORM_SYNC: 'true'
      SENDER_MAIL: 'example@gmail.com'
      SENDER_PASSWORD: 'exojwoarozdyvasy'
      MAIL_HOST: 'mail.projectname.com'
      MAIL_PORT: 465
      AWS_ACCESS_KEY_ID: ''
      AWS_SECRET_ACCESS_KEY: ''
      AWS_PUBLIC_BUCKET_NAME: ''

  projectname_database:
    image: postgres:latest
    container_name: projectname_database
    restart: unless-stopped
    volumes:
      - database:/var/lib/postgresql
      - database-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: 'postgres'
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: '3i162jcuVIiJLnmFLmr5'
    networks:
      - projectname
    ports:
      - 127.0.0.1:5432:5432
      
volumes:
  database:
    driver: local
    external: false
    driver_opts:
      o: bind
      type: none
      device: ${HOME}/docker-storage/projectname/database
  database-data:
    driver: local
    external: false
    driver_opts:
      o: bind
      type: none
      device: ${HOME}/docker-storage/projectname/database-data

networks:
  projectname:
    name: projectname
    external: false